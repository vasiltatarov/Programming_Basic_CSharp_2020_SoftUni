//PrimeOrNonPrime
for (int i = 1; i <= n; i++)
  {
 if (n % i == 0)
  {
     counter++;
  }
  }
 if (counter == 2)
  {
     // is prime
  }
 else
  {
      break;
  }
  
  //
  int n = int.Parse(Console.ReadLine());
  bool isPrime = false;
  int count = 0; //брой на делителите
  едно число, за да е просто то трябва да има само 2 делителя (1 и себе си)
  for (int i = 1; i <= n; i++)
  { if(n % i == 0) {count ++;}}
  if(count == 2) isPrime = true;
  else
  isPrime = false;
  
  //Percentage
  //percentage = (yourNumber / totalNumber) * 100;
  //number = (percentage / 100) * totalNumber;
  //($"Hearthstone - {Hearthstone * 1.0 / n * 100:F2}%");
  
  //ASCII and string.Length
  int counter = 0;
  string name = "";
  int max = int.MinValue;

  string movieName = Console.ReadLine();
  while (movieName != "STOP")
   {
    counter++;
    int sum = 0;
  for (int i = 0; i < movieName.Length; i++)
   {
    //char currentLetter = movieName[i];

  if (movieName[i] >= 97 && movieName[i] <= 122)
   {
    sum += movieName[i] - (movieName.Length * 2);
   }
  else if (movieName[i] >= 60 && movieName[i] <= 90)
   {
    sum += movieName[i] - movieName.Length;
   }
  else
   {
    sum += movieName[i]; 
   }
   }

  if (sum > max)
   {
    max = sum;
    name = movieName;
   }
   
   //
   string buyProduct = Console.ReadLine();
   int productLength = buyProduct.Length;
   int ticketSum = buyProduct[0] + buyProduct[1];
   int otherSum = buyProduct[0];


//FIND NUMBER POSITION
 int number = int.Parse(Console.ReadLine()); //324
 int number1 = number % 10;  //last number
 int number2 = number % 100 / 10;  // middle number
 int number3 = number / 100;   //first number
 
 int n = int.Parse(Console.ReadLine()); // 3245
 int fistnum = n / 1000;   //3
 int secondnum = n % 1000 / 100;  //2
 int thirdNum = n % 100 / 10;  //4
 int fourthNum = n % 10;   //5

//Reversed String
string username = Console.ReadLine();
string reversedPassword = "";
for (int i = username.Length - 1; i >= 0; i--)
 {
   reversedPassword += username[i];
 }
Console.WriteLine(reversedPassword);

//FIND NUMBER POSITION AND FIND FACTURIAL
            int number = int.Parse(Console.ReadLine());
            int copyNumber = number;
            int sum = 0;

            while (copyNumber != 0)
            {
                int currentDigit = copyNumber % 10; //Num Position

                int currentFacturial = 1;

                for (int i = 1; i <= currentDigit; i++)
                {
                    currentFacturial *= i;
                }
                sum += currentFacturial;

                copyNumber /= 10;
            }

            if (sum == number)
            {
                Console.WriteLine("yes");
            }
            else
            {
                Console.WriteLine("no");
            }
